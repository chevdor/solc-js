#!/usr/bin/env node

// This is used to download the correct binary version
// as part of the prepublish step.

var pkg = require('./package.json');
var fs = require('fs-extra');

var MemoryStream = require('memorystream');
var path = require('path');
var pwuid = require('pwuid');
var helpers = require('./helpers')();
var compilers = require('./compilers')();

var yargs = require('yargs')
  .usage('Usage: [options| version]')
 
  .option('all', {
    describe: 'Download all the versions. Additionnaly, use --nightly to get the nightly builds.',
    type: 'bool'
  })
  .option('nightly', {
    describe: 'Combined with --all, it adds the nightly to the list',
    type: 'bool'
  })
  .option('releases', {
    describe: 'Get all the release builds',
    type: 'bool'
  })
  .showHelpOnFail(false, 'Specify --help for available options')
  .help();

var argv = yargs.argv;
var requestedVersion = argv._[0];

var compilerRepo = compilers.getRepo();

function downloadBinary (version, cb) {
  console.log('Downloading version', version);
  var targetPath = path.join(compilerRepo, version);

  https.get('https://ethereum.github.io/solc-bin/bin/' + version, function (response) {
    if (response.statusCode !== 200) {
      console.log('Error downloading file: ' + response.statusCode);
      process.exit(1);
    }

    fs.ensureDirSync(compilerRepo);

    var file = fs.createWriteStream(targetPath);

    response.pipe(file);
    file.on('finish', function () {
      file.close(function () {
        console.log('Done.');
        if (cb) cb(targetPath);
      });
    });
  });
}


